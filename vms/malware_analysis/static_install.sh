#!/bin/bash

# sudo権限での実行かを確認
if [ `id -u` -ne 0 ]; then
  echo "Sorry. This script requires sudo privilege."
  exit
fi

examineToolInst () {
  echo -e "############\nInstall $examineTool\n############\n"
  case $examineTool in
    1)
      sudo apt-get -y install automake libtool make gcc yara python3-yara
      echo "Installed YARA"
      ;;
    2)
      mkdir TrID
      cd TrID
      wget https://mark0.net/download/trid_linux.zip
      unzip trid_linux.zip
      cd ..
      echo "Installed TrID"
      ;;
    3)
      pip3 install pefile
      echo "Installed pefile"
      ;;
    4)
      pip install pyelftools
      echo "Installed pyelftools"
      ;;
    5)
      sudo apt-get install npm
      npm install -g grunt-cli
      git clone https://github.com/gchq/CyberChef.git
      cd CyberChef
      npm install
      echo "Installed CyberChef"
      ;;
    6)
      sudo apt-get install binutils
      echo "Installed objdump"
      ;;
    *)
      echo "None tool."
      ;;
  esac
}

staticToolInst () {
  echo -e "############\nInstall $staticTool\n############\n"
  case $staticTool in
    1)
      sudo apt-get install ghidra
      echo "Installed Ghidra"
      ;;
    2)
      mkdir bytehist
      cd bytehist
      wget https://cert.at/media/files/downloads/software/bytehist/files/bytehist_1_0_102_linux.zip
      unzip bytehist_1_0_102_linux.zip
      cd lin64
      chmod +x bytehist
      cd ../..
      echo "Installed bytehist"
      ;;
    3)
      pip install pysqlite3
      git clone https://github.com/MITRECND/malchive
      cd malchive
      pip install
      echo "Installed malchive"
      ;;
    4)
      git clone https://github.com/extremecoders-re/pyinstxtractor
      cd pyinstxtractor
      sudo chmod +x pyinstxtractor.py
      cd ..
      echo "Installed PyInstaller Extractor"
      ;;
    5)
      pip install jsbeautifier
      pip install cssbeautifier
      echo "Installed JS Beautifier"
      ;;
    6)
      mkdir ExtractScripts
      cd ExtractScripts
      wget https://www.didierstevens.com/files/software/extractscripts.zip
      unzip extractscripts.zip
      sudo chmod +x extractscripts.py
      cd ..
      echo "Installed ExtractScripts"
      ;;
    7)
      mkdir decode-vbe
      cd decode-vbe
      wget https://didierstevens.com/files/software/decode-vbe_V0_0_1.zip
      unzip decode-vbe_V0_0_1.zip
      sudo chmod +x decode-vbe.py
      cd ..
      echo "Installed decode-vbe.py"
      ;;
    8)
      sudo apt-get install qtbase5-dev qtscript5-dev git build-essential qt5-default
      git clone --recursive https://github.com/horsicq/DIE-engine.git
      cd DIE-engine
      bash -x build_dpkg.sh
      sudo dpkg -i release/die_3.03-20210916.deb
      cd ..
      echo "Installed DIE"
      ;;
    9)
      mkdir JD-GUI_Java_Decompiler
      cd JD-GUI_Java_Decompiler
      wget https://github.com/java-decompiler/jd-gui/releases/download/v1.6.6/jd-gui-1.6.6.deb
      sudo dpkg -i jd-gui-1.6.6.deb
      cd ..
      echo "Installed JD-GUI Java Decompiler"
      ;;
    10)
      git clone https://github.com/icsharpcode/ILSpy.git
      cd ILSpy/ICSharpCode.Decompiler.Console/

      # dotnetのインストール
      wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      sudo dpkg -i packages-microsoft-prod.deb
      rm packages-microsoft-prod.deb
      sudo apt-get install -y apt-transport-https dotnet-sdk-5.0

      # ilspycmdのインストール
      dotnet tool install ilspycmd -g

      # ビルド
      dotnet publish -c release -r osx-x64
      cd bin/release/netcoreapp2.0/osx-x64/publish/

      # 実行権限をつける
      chmod +x ilspycmd
      cp -r ../publish/ /usr/local/opt/ilspycmd
      ln -s /usr/local/opt/ilspycmd/ilspycmd /usr/local/bin/
      echo "Installed ILSpy"
      ;;
    11)
      mkdir flare
      cd flare
      wget http://www.nowrap.de/download/flare06linux.tgz
      tar -xzvf flare06linux.tgz
      cd ..
      echo "Installed flare"
      ;;
    12)
      apt-get install apktool
      echo "Installed apktool"
      ;;
    *)
      echo "None tool."
      ;;
  esac
}

dynamicToolInst () {
  echo -e "############\nInstall $dynamicTool\n############\n"
  case $dynamicTool in
    1)
      # Ubuntu20.04
      sudo dpkg --add-architecture i386
      wget -nchttps://dl.winehq.org/wine-builds/winehq.key
      sudo apt-key add winehq.key
      sudo add-apt-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main'
      sudo apt install --install-recommends winehq-stable
      echo "Installed wine"
      ;;
    2)
      PowerShell Core
      sudo apt-get update
      sudo apt-get install -y wget apt-transport-https software-properties-common
      wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb
      sudo dpkg -i packages-microsoft-prod.deb
      sudo add-apt-repository universe
      sudo apt-get install -y powershell
      echo "Installed PowerShell Core"
      ;;
    3)
      sudo apt-get install radare2
      echo "Installed radare2"
      ;;
    4)
      sudo apt-get install libemu-dev
      echo "Installed libemu"
      ;;
    5)
      sudo apt install nasm
      sudo apt install binutils
      git clone https://github.com/accidentalrebel/shcode2exe.git
      cd shcode2exe
      sudo chmod +x shcode2exe.py
      echo "Installed shcode2exe"
      ;;
    6)
      sudo apt-get install -y edb-debugger
      echo "Installed edb"
      ;;
    7)
      sudo apt-get install ltrace
      sudo apt-get install strace
      echo "Installed ltrace & strace"
      ;;
    8)
      sudo apt-get install OllyDbg
      echo "Installed OllyDbg"
      ;;
    9)
      sudo apt-get update
      sudo apt-get upgrade
      sudo apt install python3-pip git cmake
      git clone https://github.com/qilingframework/qiling
      cd qiling
      sudo pip3 install .
      git submodule update --init --recursive
      echo "Installed Qiling"
      ;;
    *)
      echo "None tool."
      ;;
  esac
}

while :
do
  echo -e "
1) Install Reverse-Engineering Tools
2) Update
3) Remove Reverse-Engineering Tools
4) View Installed Tools & Uninstalled Tools

quit) quit
  "

  read -p "input > " mode

  case $mode in
    1)
      # mode1
      # ちょっとした説明付きのほうが教育向きかも
    while :
    do
      echo -e "
1)Examine Static Properties
2)Statically
3)Dynamically

0)All install Reverse-Engineering

back) back menu
      "

      read -p "input > " category

      case $category in
        1)
          # Examineツール選択
          while :
          do
            echo -e "
1) YARA
2) TrID
3) pefile
4) pyelftools
5) CyberChef
6) objdump

back) back menu

0) All install Examine Static Properties
            "

            read -p "input > " examineTool
            case $examineTool in
              "back")
                break
                ;;
              0)
                for examineTool in 1 2 3 4 5 6
                do
                  examineToolInst
                done
                ;;
              *)
                examineToolInst
                ;;
            esac
          done
          ;;

        2)
          # staticツール選択
          while :
          do
            echo -e "
1) Ghidra
2) Bytehist
3) Malchive
4) PyInstaller Extractor
5) JS Beautifier
6) ExtractScripts
7) decode-vbe.py
8) DIE
9) JD-GUI Java Decompiler
10) ILSpy
11) Flare
12) apktool

back) back menu

0) All install Examine Static Properties
            "

            read -p "input > " staticTool
            case staticTool in
              "back")
                break
                ;;
              0)
                for staticTool in 1 2 3 4 5 6 7 8 9 10 11 12
                do
                  staticToolInst
                done
                ;;
              *)
                staticToolInst
                ;;
            esac
          done
          ;;

        3)
          # dynamicツール選択
          while :
          do
            echo -e "
1) wine
2) PowerShell Core
3) radare2
4) libemu
5) shcode2exe
6) edb
7) ltrace & strace
8) ollydbg
9) Qiling

back) back menu

0) All install Dynamically
            "

            read -p "input > " dynamicTool

            case dynamicTool in
              "back")
                break
                ;;
              0)
                for dynamicTool in 1 2 3 4 5 6 7 8 9
                do
                  dynamicToolInst
                done
                ;;
              *)
                dynamicToolInst
                ;;
            esac
          done
          ;;

        0)
          # 全てのツールをインストール
          for examineTool in 1 2 3 4 5 6
            do
              examineToolInst
            done
          for staticTool in 1 2 3 4 5 6 7 8 9 10 11 12
            do
              staticToolInst
            done
          for dynamicTool in 1 2 3 4 5 6 7 8 9
            do
              dynamicToolInst
            done
          ;;

        back)
          break
          ;;

        *)
          ;;

      esac
    done
    ;;
  2)
      # Update (なくても良い)
      apt-get update -m
      ;;
  3)
      # インストールされてるツールを表示後、どれを消すか番号で選ばせる
      # 一つ一つのパターンと全部のパターン
      ;;
  4)
      # インストールされているものとされていないものがわかりやすいように表示
      ;;
  quit)
    break
    ;;
  *)
      echo -e "You can input the number [1 - 4].\nExiting..."
      exit
    ;;
  esac
done